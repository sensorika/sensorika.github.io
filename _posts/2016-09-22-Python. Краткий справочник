---
layout: post
title:  "Python. Справочник"
date:   2016-09-22 11:23:32
categories: Справочник

---


# Python. Справочник

## Управляющие конструкции

### Ветвление ([wiki](https://ru.wikipedia.org/wiki/%D0%92%D0%B5%D1%82%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5_(%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5))
|Python|Блок-схема|
|------|----------|
```python
if <булево_выражение>:
	<ветвление1>
```

```python
if <булево_выражение>:
	<ветвление1>
else:
    <ветвление2>
```

```python
if <булево_выражение1>:
	<ветвление1>
elif <булево_выражение2>:
	<ветвление2>
else:
	<ветвление3>
```
#### Примеры:

### Цикл ([wiki](https://ru.wikipedia.org/wiki/%D0%A6%D0%B8%D0%BA%D0%BB_(%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5))

```python
for <элемент> in <коллекция>:
	<цикличный код>
```
Так же в циклах могут присуствовать
```python
continue # немедленный переход к следующией итерации
break    # немедленное прекращение цикла и переход к следующией конструкции, так если бы цикл закончился
```
#### Примеры:
Выполнение цикла 10 раз (от 0 до 9), где `i` становится номером итерации
```python
for i in range(0, 10):
	print(i)
```
Обход каждого эелемента в списке
```python
numbers = [1,2,3,4,5,6]
for element in numbers
	print(element)
```

### Структуры данных
### Операции с любыми коллекциями
|||
|-|-|
|len (s) |	 возвращает длину s.|
|min (s), max (s)| 	наименьший и наибольший элементы s соответственно.|
|x in s |	истина (1), если s включает в себя элемент равный x, иначе - ложь (0).|
|x not in s |	 ложь, если s включает x, иначе истина.|
|s + t |	 слияние s и t.|
|s * n , n * s |	 n копий s, слитых вместе (например, ‘*’ * 5 - это строка ‘*****’).|
|s[i] |	 i-тый элемент s, где i отсчитывается с 0.|
|s[i:j] |	часть элементов s, начиная с i до j-1 включительно. Либо i, либо j, либо оба параметра могут быть опущены (i по умолчанию равен 0, j - длине s).|

#### Список ([wiki](https://ru.wikipedia.org/wiki/%D0%94%D0%B8%D0%BD%D0%B0%D0%BC%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B9_%D0%BC%D0%B0%D1%81%D1%81%D0%B8%D0%B2))
* индексируется натуральными числами
* расширяется при добавлении новых элементов
* может содержать элементы разных типов
* Список может выполнять роль:
	1. Массива
	2. Очереди
	3. Стэка


```python
arr = []        # создание пустого списка
arr = [1,2,3,4] # инициализация списка элементами
arr = [0] * 10  # инициализация списка десяти нулями
arr = [i for i in range(0, 10)] # инициали списка значениями от 0 до 10
```
##### Операции со списками
| | |
|------------|---------|
|s[i] = x | 	i-тый элемент s заменяется на x.|
|s[i:j] = t |	часть элементов s от i до j-1 заменяется на t (t может быть также списком).|
|del s[i:j] | 	удаляет часть s (также как и s[i:j] = []).|
|s.append (x) |	добавляет элемент x к концу s.|
|s.count (x)  |	возвращает количество элементов s равных x.|
|s.index (x) |	возвращает наименьший i, такой, что s[i]==x.|
|s.insert (i,j) 	|часть s, начиная с i-го элемента, сдвигается вправо, и s[i] присваивается x.|
|s.remove (x) 	|то же, что и del s[ s.index(x) ] - удаляет первый элемент s, равный x.|
|s.reverse () 	|записывает строку в обратном порядке|
|s.sort () 	|сортирует список по возрастанию. |

#### Словарь ([wiki](https://ru.wikipedia.org/wiki/%D0%90%D1%81%D1%81%D0%BE%D1%86%D0%B8%D0%B0%D1%82%D0%B8%D0%B2%D0%BD%D1%8B%D0%B9_%D0%BC%D0%B0%D1%81%D1%81%D0%B8%D0%B2))
##### Операции со словарями
| | |
|---|---|
|len (a) |	количество элементов а.|
|a[k]  |	элемент с ключом k.|
|a[k] = x |	присвоить элементу с ключом k значение x.|
|del a[k] |	удалить a[k] из словаря.|
|a.items () |	список тьюплов пар (ключ, значение).|
|a.keys () |	список ключей а.|
|a.values ()| 	список значений а.|
|a.has_key (k)| 	возвращает 1, если а имеет ключ k, иначе 0.|

#### Множество
##### Операции со множествами
| | |
|---|---|
| | |
