---
layout: post
title:  "Общие требования к выполнению лабораторных работ"
date:   2017-12-28 11:23:32
categories: Справочник
---

## Содержание
  * [Содержание лабораторной работы](#Содержание-лабораторной-работы)
  * [Формат лабораторной работы](#Формат-лабораторной-работы)
    * [Cтруктура каталогов](#Cтруктура-каталогов)
    * [Содержание директорий и файлов](#Содержание-директорий-и-файлов)
        * [doc](#doc)
        * [pic](#pic)
        * [src](#src)
        * [drw](#drw)
        * [README.MD](#readmemd)
  * [Пример оформленной работы](#Пример-оформленной-работы)
    * [Cтруктура каталогов](#Cтруктура-каталогов)
    * [Содержание README.MD](#Содержание-README.MD)

## Содержание лабораторной работы

В рамках прохождения учебного курса, студенты должны выполнить лабораторную работу. Лабораторная работа должна содержать отчет и практическое подтверждение в виде программной реализации или 3D модели/чертежа.

## Формат лабораторной работы
 
Общий каталог должен быть назван по следующему принципу

YYYY-MM-DD-НазваниеТемы-Автор1-Автор2

В зависимости от темы лабораторной работы и особенностей её реализации наличие тех или иных файлов и директорий может варьироваться, но любая лабораторная работа **обязательно** должна содержать: 

- README.MD
- doc (содержит отчет/текстовое описание работы.)
- pic
- src (в случае если практическая часть выполнена в виде программы)
- drw (в случае если практическая часть выполнена в виде 3d модели/чертежа)


### Cтруктура каталогов:
```
.
└── YYYY-MM-DD-НазваниеТемы-Автор1-Автор2-Автор-N
    ├── README.MD
    ├── doc
    │   ├── Отчет.doc
    │   └── Отчет.pdf
    ├── drw
    │   └── Чертеж.stl
    ├── pic
    │   ├── ДополнительныйРисунок.png
    │   ├── Рисунок1.png
    │   └── Рисунок2.png
    ├── src
    |   └── ProgramProject
    |       └── ...
    └── other
```

### Содержание директорий и файлов:

#### **doc**
Текстовая версия отчета. 

Обязательно:

- отчет в формате `*.doc`/`*.odt`. Название файла должно совпадать с названием темы.
- дубликат отчета в формате `*.pdf`

Если есть:

- электронные таблицы в формате `*.xls`/`*.ods`

#### **pic**

Обязательно: 

- рисунки из отчета в формате `*.png`. Название файла должно быть совпадать подписью рисунка из отчета.

Если есть: 

- дополнительные рисунки/фотографии, которые не попали в отчет

#### **src**
Содержит директорию проекта реализованного программного обеспечения. Если проект использует какие-либо библиотеки/пакеты, они должны быть включены в проект или подгружаться через пакетный менеджер. Программа должна быть кросс-платформенной. Должна иметься возможность запустить программу на другом компьютере (на компьютере в лаборатории с ОС: Windows 7 и Ubuntu 16.04). В случае, если для запуска программы требуется другое ПО (интегрированная среда/компилятор/интерпретатор) студент может установить на лабораторном компьютере требуемое ПО. 

В случае использования компилируемых ЯП, проект должен включать:

- исполняемый файл, который можно будет запустить на ОС (начиная с) Windows 7 x64 
- исходный код
- файл проекта/среды с требуемыми зависимостями (если есть) 
- ресурсы (спрайты, файлы, и т.д.)

В случае использования интерпретируемых ЯП, проект должен включать:

- исходный код
- файл проекта/среды с требуемыми зависимостями (если есть) 
- ресурсы (спрайты, файлы, и т.д.)

Содержание проекта может сильно варьироваться в зависимости от используемой технологии. В случае с Python рекомендуется использовать pyenv, который позволит легко перенести ПО на другой компьютер.

#### **drw**
3D модели, чертежи, векторная графика, наброски и т.д. 

#### **README.MD**

Содержит общую текстовую информацию по лабораторной работе.
Открывается обычным блокнотом и форматируется следующим образом:

```
# Общая информация
Дата: Год/месяц/число
ВУЗ: 
Группа: 

# Название темы
Краткое описание л/р (2-5 предложения). Можно взять из введения отчета.

# Авторы

ФИО Автора 1
- контактная информация (опционально)
ФИО Автора 2
- контактная информация (опционально)

# Техническая информация

## Используемые технологии
- Языки программирования (+версия)
- Библиотеки/пакеты/зависимости (если есть)

## Используемое ПО
- Интегрированная среда разработки (+версия)
- Компилятор/интерпретатор/виртуальная машина (+версия)
- Менеджер пакетов/Система автоматической сборки (+версия)
- CAD (+версия)
- Графический редактор (+версия)
- ...

## Краткая инструкция по запуску программы (в случае если практическая часть выполнена в виде программы)

### Запуск программы/скрипта
- Путь до исполняемого файла/скрипта. В случае скрипта указать команду для запуска и какой скрипт надо запускать (точка входа в ПО).

### Запуск сборки/компиляции проекта для 
- В случае систем автоматических сборок указать команду для сборки/компиляции 
- В случае IDE указать файл проекта и название контрола для сборки/компиляции

```

--------------------

## Пример оформленной работы

### Cтруктура каталогов
```
1687-07-05-Математические_начала_натуральной_философии-Исаак_Ньютон/
├── doc
│   ├── Математические начала натуральной философии.doc
│   └── Математические начала натуральной философии.pdf
├── drw
│   └── Модель_рефлектора.stl
├── pic
│   ├── Рис1.Движение_в_гравитационном_поле.png
│   └── Рис2.Кинетическая_энергия.png
├── README.MD
└── src
    └── RigidBodySimulation
```

### Содержание README.MD

```
# Общая информация
Дата: 1687/7/5
ВУЗ: Кембриджский университет
Группа: Теоретическая механика

# Математические начала натуральной философии
В данной лабораторной работе определены базовые понятия — масса, 
сила, инерция («врождённая сила материи»), количество движения и др. 
Постулируются абсолютность пространства и времени, мера которых 
не зависит от положения и скорости наблюдателя. На основе этих чётко 
определённых понятий формулируются три закона механики.

# Авторы

Исаак Ньютон
- newton@gmail.com
- https://github.com/Isaac_Newton

# Техническая информация

## Используемые технологии
- Python 3.6.4, Java
- scipy, numpy, simupy

## Используемое ПО
- PyCharm 2017.3.2, Eclipse 4.7, Visual Studio 2016
- CPython 3.6.4, JVM 1.8, dotNET 4.7.1
- pyenv 1.2, gradle 4.4.1, CMake 3.10.1
- AutoCAD 2017, Sketchup Make 2017 
- CorelDRAW 2017, Inkscape 0.91

## Краткая инструкция по запуску программы

### Запуск программы/скрипта
- Исполняемый файл программы: src/project1/prog.exe
- Запуск скрипта: python src/project2/main.py

### Запуск сборки/компиляции проекта для 
- Сборки проекта через командную строку: gradle build
- Сборка проекта через IDE Visual Studio:
  1. Запустить Visual Studio
  2. В верхней части меню выбрать "Открыть проект"
  3. В диалоговом окне выбрать файл проекта `Project4.sln`
  4. В верхней части меню выбрать Проект -> Сборка
  5. В верхней части меню выбрать Проект -> Запуск
```
